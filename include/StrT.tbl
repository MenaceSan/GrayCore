//! @file StrT.tbl
//! included by "StrT.h" or "StrT.cpp" to force instantiation of the functions.
//! @copyright 1992 - 2020 Dennis Robinson (http://www.menasoft.com)
//! StrTTbl(returntype, name, args)
//! omit inline methods

		// NON modifying methods first.

StrTTbl(COMPARE_t,Cmp,(const TYPE* pszStr1, const TYPE* pszStr2))
StrTTbl(COMPARE_t,CmpN,(const TYPE* pszStr1, const TYPE* pszStr2, StrLen_t iLenMaxChars))
StrTTbl(COMPARE_t,CmpI,(const TYPE* pszStr1, const TYPE* pszStr2))
StrTTbl(COMPARE_t,CmpIN,(const TYPE* pszStr1, const TYPE* pszStr2, StrLen_t iLenMaxChars))
StrTTbl(COMPARE_t,CmpHeadI,(const TYPE* pszFind, const TYPE* pszTableElem))
StrTTbl(bool,StartsWithI,(const TYPE* pszStr1, const TYPE* pszPrefix))
StrTTbl(bool,EndsWithI,(const cSpan<TYPE>& str, const cSpan<TYPE>& postfix))

StrTTbl(HASHCODE32_t,GetHashCode32,(const cSpan<TYPE>& str))
StrTTbl(StrLen_t,FindCharN,(const TYPE* pszStr, TYPE ch, StrLen_t iLenMax))	// NOEXCEPT
StrTTbl(TYPE*,FindChar,(const TYPE* pszStr, TYPE chFind, StrLen_t iLenMax))
StrTTbl(TYPE*,FindCharRev,(const cSpan<TYPE>& str, TYPE chFind))
StrTTbl(TYPE*,FindTokens,(const cSpan<TYPE>& str, const TYPE* pszTokens))

StrTTbl(StrLen_t,FindStrN,(const TYPE* pszText, const TYPE* pszSubStr, StrLen_t iLenMaxChars))
StrTTbl(TYPE*,FindStr,(const TYPE* pszText, const TYPE* pszSubStr, StrLen_t iLenMaxChars))
StrTTbl(StrLen_t,FindStrNI,(const TYPE* pszText, const TYPE* pszSubStr, StrLen_t iLenMaxChars))
StrTTbl(TYPE*,FindStrI,(const TYPE* pszText, const TYPE* pszSubStr, StrLen_t iLenMaxChars))
StrTTbl(StrLen_t,FindWord,(const TYPE* pszText, const TYPE* pszKeyWord, StrLen_t iLenMaxChars))

StrTTbl(bool,IsWhitespace,(const TYPE* pStr, StrLen_t iLenMaxChars))
StrTTbl(bool,IsPrintable,(const TYPE* pStr, StrLen_t iLenMaxChars))
StrTTbl(StrLen_t,GetWhitespaceEnd,(const cSpan<TYPE>& str))

StrTTbl(ITERATE_t,TableFind,(const TYPE* pszFindThis, const cSpanUnk& t))
StrTTbl(ITERATE_t,TableFindHead,(const TYPE* pszFindHead, const cSpanUnk& t))
StrTTbl(ITERATE_t,TableFindSorted,(const TYPE* pszFindThis, const cSpanUnk& t))
StrTTbl(ITERATE_t,TableFindHeadSorted,(const TYPE* pszFindHead, const cSpanUnk& t))

// String modifiers

StrTTbl(StrLen_t,CopyLen,(TYPE* pDst, const TYPE* pSrc, StrLen_t iLenMaxChars))		// NOEXCEPT

StrTTbl(StrLen_t,EscSeqDecode,(cSpanX<TYPE> ret, const TYPE* pStrIn, StrLen_t iLenInMax))
StrTTbl(StrLen_t,EscSeqDecodeQ,(cSpanX<TYPE> ret, const TYPE* pStrIn, StrLen_t iLenInMax))
StrTTbl(bool,EscSeqTest,(const TYPE* pStrIn))
StrTTbl(StrLen_t,EscSeqAdd,(cSpanX<TYPE> ret, const TYPE* pStrIn))
StrTTbl(StrLen_t,EscSeqAddQ,(cSpanX<TYPE> ret, const TYPE* pStrIn))

StrTTbl(StrLen_t,TrimWhitespaceEnd,(cSpanX<TYPE> ret))
StrTTbl(TYPE*,TrimWhitespace,(TYPE* pStr, StrLen_t iLenMax))
StrTTbl(StrLen_t,ReplaceX,(cSpanX<TYPE> ret, StrLen_t iDstIdx, StrLen_t iDstSegLen, const cSpan<TYPE>& src))

StrTTbl(ITERATE_t,ParseArray,(cSpanX<TYPE> cmdLine, cSpanX<const TYPE*,const TYPE*> cmds, const TYPE* pszSep, STRP_MASK_t uFlags))
StrTTbl(ITERATE_t,ParseArrayTmp,(cSpanX<TYPE> tmp, const TYPE* pszCmdLine, cSpanX<const TYPE*,const TYPE*> cmds, const TYPE* pszSep, STRP_MASK_t uFlags))
StrTTbl(StrLen_t,MatchRegEx,(const TYPE* pText, const TYPE* pPattern, bool bIgnoreCase, StrLen_t nTextMax))

StrTTbl(TYPE*,FindBlockEnd,(STR_BLOCK_t eBlockType, const TYPE* pszLine, StrLen_t iLenMaxChars))
StrTTbl(TYPE*,StripBlock,(TYPE* pszText))
StrTTbl(StrLen_t,ConvertToCSV,(cSpanX<TYPE> ret, const cMemSpan& src)) 
